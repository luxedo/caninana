[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "caninana"
dynamic = ["version"]
description = 'A lightweight, dictionary-based DataFrame implementation in pure Python. Designed for simplicity and ease of use. Perfect for small projects or when a full-fledged DataFrame library is overkill.'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Luiz Eduardo Amaral", email = "luizamaral306@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/Luiz Eduardo Amaral/caninana#readme"
Issues = "https://github.com/Luiz Eduardo Amaral/caninana/issues"
Source = "https://github.com/Luiz Eduardo Amaral/caninana"

[tool.hatch.version]
path = "src/caninana/__about__.py"

[tool.hatch.envs.hatch-test.scripts]
run = "pytest{env:HATCH_TEST_ARGS:} {args}"
run-cov = "coverage run -m pytest{env:HATCH_TEST_ARGS:} {args}"
cov-combine = [
  "coverage combine",
  "coverage xml",
]
cov-report = "coverage report"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/caninana tests}"

[[tool.mypy.overrides]]
module = ["pytest",]
ignore_missing_imports = true

[tool.coverage.run]
source_pkgs = ["caninana", "tests"]
branch = true
parallel = true
omit = [
  "src/caninana/__about__.py",
]

[tool.coverage.paths]
caninana = ["src/caninana", "*/caninana/src/caninana"]
tests = ["tests", "*/caninana/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
